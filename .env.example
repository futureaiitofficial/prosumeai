# ================================
# PROSUMEAI DOCKER CONFIGURATION
# ================================
# Copy this file to .env and update with your actual values
# Only includes environment variables that are ACTUALLY used by the application

# Application Settings
NODE_ENV=development
PORT=3000

# Database Configuration
POSTGRES_DB=prosumeai
POSTGRES_USER=your_db_user
POSTGRES_PASSWORD=your_secure_db_password
DB_HOST=localhost
DB_PORT=5432
DATABASE_URL=postgresql://user:password@localhost:5432/prosumeai

# Session & Cookie Security (REQUIRED)
SESSION_SECRET=your_session_secret_minimum_64_characters_use_crypto_randomBytes_64_toString_hex
COOKIE_SECRET=your_cookie_secret_minimum_64_characters_use_crypto_randomBytes_64_toString_hex
SESSION_MAX_AGE=86400000
COOKIE_SAMESITE=lax
DISABLE_SECURE_COOKIE=true

# Application URLs & CORS
VITE_API_URL=http://localhost:3000
VITE_APP_URL=http://localhost:3000
ORIGIN_URL=http://localhost:3000
CORS_ORIGIN=*
TRUST_PROXY=1

# Admin Configuration
ADMIN_EMAIL=your-admin@example.com
ADMIN_PASSWORD=YourSecureAdminPassword2025!

# pgAdmin Configuration (for database management)
PGADMIN_DEFAULT_EMAIL=your-pgadmin@example.com
PGADMIN_DEFAULT_PASSWORD=YourSecurePgAdminPassword2025!
PGADMIN_CONFIG_SERVER_MODE=False

# ================================
# IMPORTANT SECURITY NOTES
# ================================
# 
# REMOVED VARIABLES (NOT NEEDED):
# - SECRET_KEY: Not used in the codebase
# - JWT_SECRET: No JWT implementation (uses session-based auth)
# - VITE_ENCRYPTION_KEY: Encryption keys are generated and stored in database
# - BCRYPT_ROUNDS: App uses scrypt for password hashing
# - JWT_EXPIRES_IN: No JWT implementation
#
# WHY THIS DESIGN IS SECURE:
# 1. Session-based authentication (more secure than JWT for web apps)
# 2. Database-generated encryption keys (cryptographically random)
# 3. Database-stored API keys (OpenAI, Razorpay, SMTP are in admin panel)
# 4. Robust fallback system with sensible defaults
#
# ONLY THESE ENVIRONMENT VARIABLES ARE CRITICAL:
# - SESSION_SECRET: For Express session middleware
# - COOKIE_SECRET: For cookie signing
# - Database connection variables
# - Admin credentials for initial setup

# Authentication Rate Limiting
AUTH_RATE_LIMIT_ATTEMPTS=5  # Max login attempts
AUTH_RATE_LIMIT_DURATION=900 # Duration in seconds (15 mins)
AUTH_RATE_LIMIT_BLOCK=3600  # Block duration in seconds (1 hour)

# API Keys (replace with actual keys)
OPENAI_API_KEY=your-openai-api-key
ANTHROPIC_API_KEY=your-anthropic-api-key 